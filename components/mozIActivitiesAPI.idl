/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * Contributor(s):
 *	Shane Caraveo <scaraveo@mozilla.com>
 */

#include "nsISupports.idl"

/* Web Activities API
 *
 */
interface nsIDOMWindow;

[scriptable, function, uuid(8163c04f-df3d-584e-ad23-561930e6fa23)]
interface mozIDOMActivitiesCallback: nsISupports {
  void handle(in jsval data);
};

[scriptable, uuid(92fdb751-1fbc-2b48-a4da-4f2f8621b324)]
interface mozIDOMActivities: nsISupports {
  void startActivity(in jsval aActivity,
                     [optional] in mozIDOMActivitiesCallback success,
                     [optional] in mozIDOMActivitiesCallback error);
};


[scriptable, function, uuid(6db3b4f3-455f-cd47-afd7-a7a61aa4df12)]
interface mozIActivitiesHandlerList : nsISupports {
  void handle(in jsval activities);
};

[scriptable, function, uuid(bb4ee14a-e680-e548-bcef-60cf371f2214)]
interface mozIActivitiesMediatorFactory : nsISupports {
  void handle(in nsIDOMWindow aWindow, in jsval aActivity, [retval] out jsval aMeditorInstance);
};

[scriptable, uuid(aa3287ea-dfee-ea47-b069-1bad80ff53bb)]
interface mozIActivitiesRegistry: nsISupports {
  void registerActivityHandler(in DOMString aActivityName, in DOMString aURL, in jsval aManifest);
  void unregisterActivityHandler(in DOMString aActivityName, in DOMString aURL);
  void getActivityHandlers(in DOMString aActivityName,
                           in mozIActivitiesHandlerList aCallback);
  void registerMediator(in DOMString aActivityName,
                        in mozIActivitiesMediatorFactory aMediatorClass);
  void invoke(in nsIDOMWindow aWindow, in jsval aActivity,
              [optional] in mozIDOMActivitiesCallback success,
              [optional] in mozIDOMActivitiesCallback error);
};



